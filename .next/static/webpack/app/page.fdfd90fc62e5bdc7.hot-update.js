"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/BrazilMap.tsx":
/*!**********************************!*\
  !*** ./components/BrazilMap.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BrazilMap)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/script */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/script.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst regionColors = {\n    Norte: \"fill-green-200\",\n    Nordeste: \"fill-yellow-200\",\n    \"Centro-Oeste\": \"fill-red-200\",\n    Sudeste: \"fill-blue-200\",\n    Sul: \"fill-purple-200\"\n};\nfunction BrazilMap() {\n    _s();\n    const [selectedState, setSelectedState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BrazilMap.useEffect\": ()=>{\n            if ( true && window.google) {\n                drawRegionsMap();\n            }\n        }\n    }[\"BrazilMap.useEffect\"], []);\n    const drawRegionsMap = ()=>{\n        const data = window.google.visualization.arrayToDataTable([\n            [\n                'Estado',\n                'Seleção'\n            ],\n            [\n                'BR',\n                0\n            ],\n            [\n                'AC',\n                0\n            ],\n            [\n                'AL',\n                0\n            ],\n            [\n                'AP',\n                0\n            ],\n            [\n                'AM',\n                0\n            ],\n            [\n                'BA',\n                0\n            ],\n            [\n                'CE',\n                0\n            ],\n            [\n                'DF',\n                0\n            ],\n            [\n                'ES',\n                0\n            ],\n            [\n                'GO',\n                0\n            ],\n            [\n                'MA',\n                0\n            ],\n            [\n                'MT',\n                0\n            ],\n            [\n                'MS',\n                0\n            ],\n            [\n                'MG',\n                0\n            ],\n            [\n                'PA',\n                0\n            ],\n            [\n                'PB',\n                0\n            ],\n            [\n                'PR',\n                0\n            ],\n            [\n                'PE',\n                0\n            ],\n            [\n                'PI',\n                0\n            ],\n            [\n                'RJ',\n                0\n            ],\n            [\n                'RN',\n                0\n            ],\n            [\n                'RS',\n                0\n            ],\n            [\n                'RO',\n                0\n            ],\n            [\n                'RR',\n                0\n            ],\n            [\n                'SC',\n                0\n            ],\n            [\n                'SP',\n                0\n            ],\n            [\n                'SE',\n                0\n            ],\n            [\n                'TO',\n                0\n            ]\n        ]);\n        const options = {\n            region: 'BR',\n            resolution: 'provinces',\n            datalessRegionColor: 'white',\n            defaultColor: '#F1F2F3',\n            backgroundColor: 'white',\n            enableRegionInteractivity: true,\n            tooltip: {\n                trigger: 'none'\n            },\n            legend: 'none'\n        };\n        const container = document.getElementById('regions_div');\n        if (!container) return;\n        const chart = new window.google.visualization.GeoChart(container);\n        function myClickHandler() {\n            const selection = chart.getSelection();\n            if (selection.length > 0) {\n                const stateIndex = selection[0].row;\n                const stateCodes = [\n                    'AC',\n                    'AL',\n                    'AP',\n                    'AM',\n                    'BA',\n                    'CE',\n                    'DF',\n                    'ES',\n                    'GO',\n                    'MA',\n                    'MT',\n                    'MS',\n                    'MG',\n                    'PA',\n                    'PB',\n                    'PR',\n                    'PE',\n                    'PI',\n                    'RJ',\n                    'RN',\n                    'RS',\n                    'RO',\n                    'RR',\n                    'SC',\n                    'SP',\n                    'SE',\n                    'TO'\n                ];\n                const stateNames = [\n                    'acre',\n                    'alagoas',\n                    'amapa',\n                    'amazonas',\n                    'bahia',\n                    'ceara',\n                    'distrito-federal',\n                    'espirito-santo',\n                    'goias',\n                    'maranhao',\n                    'mato-grosso',\n                    'mato-grosso-do-sul',\n                    'minas-gerais',\n                    'para',\n                    'paraiba',\n                    'parana',\n                    'pernambuco',\n                    'piaui',\n                    'rio-de-janeiro',\n                    'rio-grande-do-norte',\n                    'rio-grande-do-sul',\n                    'rondonia',\n                    'roraima',\n                    'santa-catarina',\n                    'sao-paulo',\n                    'sergipe',\n                    'tocantins'\n                ];\n                const stateName = stateNames[stateIndex - 1];\n                setSelectedState(stateName);\n                router.push(\"/estado/\".concat(stateName));\n            }\n        }\n        window.google.visualization.events.addListener(chart, 'select', myClickHandler);\n        chart.draw(data, options);\n    };\n    const getStateColor = (stateId)=>{\n        if (selectedState === stateId) {\n            return \"fill-blue-500\";\n        }\n        return \"fill-gray-200\";\n    };\n    const getStateName = (stateId)=>{\n        const stateNames = {\n            AC: \"Acre\",\n            AL: \"Alagoas\",\n            AP: \"Amapá\",\n            AM: \"Amazonas\",\n            BA: \"Bahia\",\n            CE: \"Ceará\",\n            DF: \"Distrito Federal\",\n            ES: \"Espírito Santo\",\n            GO: \"Goiás\",\n            MA: \"Maranhão\",\n            MT: \"Mato Grosso\",\n            MS: \"Mato Grosso do Sul\",\n            MG: \"Minas Gerais\",\n            PA: \"Pará\",\n            PB: \"Paraíba\",\n            PR: \"Paraná\",\n            PE: \"Pernambuco\",\n            PI: \"Piauí\",\n            RJ: \"Rio de Janeiro\",\n            RN: \"Rio Grande do Norte\",\n            RS: \"Rio Grande do Sul\",\n            RO: \"Rondônia\",\n            RR: \"Roraima\",\n            SC: \"Santa Catarina\",\n            SP: \"São Paulo\",\n            SE: \"Sergipe\",\n            TO: \"Tocantins\"\n        };\n        return stateNames[stateId] || stateId;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-[500px]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_script__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                src: \"https://www.gstatic.com/charts/loader.js\",\n                onLoad: ()=>{\n                    window.google.charts.load('current', {\n                        packages: [\n                            'geochart'\n                        ]\n                    });\n                    window.google.charts.setOnLoadCallback(drawRegionsMap);\n                }\n            }, void 0, false, {\n                fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                lineNumber: 168,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"regions_div\",\n                className: \"w-full h-full\"\n            }, void 0, false, {\n                fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                lineNumber: 175,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center gap-4 mt-4\",\n                children: Object.entries(regionColors).map((param)=>{\n                    let [region, color] = param;\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-4 h-4 \".concat(color)\n                            }, void 0, false, {\n                                fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                                lineNumber: 180,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-sm\",\n                                children: region\n                            }, void 0, false, {\n                                fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                                lineNumber: 181,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, region, true, {\n                        fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                        lineNumber: 179,\n                        columnNumber: 11\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n                lineNumber: 177,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/tavoralucas/Desktop/eleicoes2026/components/BrazilMap.tsx\",\n        lineNumber: 167,\n        columnNumber: 5\n    }, this);\n}\n_s(BrazilMap, \"5swXHtkNQ6olmFxIlFXNKRwgTPU=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = BrazilMap;\nvar _c;\n$RefreshReg$(_c, \"BrazilMap\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/BrazilMap.tsx\n"));

/***/ })

});